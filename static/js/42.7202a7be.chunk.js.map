{"version":3,"file":"static/js/42.7202a7be.chunk.js","mappings":"yNACA,GAAgB,OAAS,iCAAiC,MAAQ,gCAAgC,KAAO,+BAA+B,OAAS,iCAAiC,SAAW,mCAAmC,aAAe,wC,+DCwF/O,EAjFyB,WAAO,IAAD,EAC7B,GAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAO,UAAAJ,EAASK,aAAT,eAAgBD,OAAQ,UAErCE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,2FACtBV,GAAW,GADW,mBAGDW,EAAAA,EAAAA,IAAkBd,GAHjB,OAGde,EAHc,OAIpBhB,EAASgB,GAJW,gDAMpBV,EAAS,KAAMW,SANK,yBAQpBb,GAAW,GARS,4EAAH,qDAWrBU,GACD,GAAE,CAACb,IAMJ,OACE,gCACGI,IAAS,gDACTF,IAAW,SAACe,EAAA,EAAD,IACVnB,GAGA,iCACE,oBAAQoB,UAAWC,EAAAA,OAAeC,KAAK,SAASC,QAZvC,WACfb,EAASE,EACV,EAUO,WACE,SAAC,cAAD,CACEY,MAAO,CACLC,MAAO,QACPC,KAAM,GACNN,UAAW,qBAJf,UAOE,0BACE,SAAC,MAAD,SAGJ,0CAEF,iBAAKA,UAAWC,EAAAA,aAAhB,WACE,gBAAKD,UAAWC,EAAAA,SAAhB,UACE,gBACEM,IACE3B,EAAM4B,YACFC,EAAAA,GAAY7B,EAAM4B,YADtB,0DAIFE,IAAK9B,EAAM+B,eACXC,MAAM,aAKV,4BACE,eAAIZ,UAAWC,EAAAA,MAAf,SAA8BrB,EAAMiC,SACpC,kDAAwC,GAArBjC,EAAMkC,cAAzB,QACA,sCACA,iCAAOlC,EAAMmC,aACb,oCACA,iCAAOnC,EAAMoC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,oBArCxD,gBAAKpB,UAAWC,EAAAA,SAAhB,uCA8CP,C,8JCtFKoB,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDjB,EAAY,kCAEZkB,EAAmB,mCAAG,sGACVN,EAASO,IAAI,uBADH,uBACzB/B,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAKnBgC,EAAY,mCAAG,WAAMC,GAAN,yFACHT,EAASO,IAAI,eAAgB,CAClDJ,OAAQ,CACNO,KAAM,EACNC,eAAe,EACfF,MAAAA,KALsB,uBAClBjC,EADkB,EAClBA,KADkB,kBAQnBA,GARmB,2CAAH,sDAWZD,EAAiB,mCAAG,WAAMqC,GAAN,yFACRZ,EAASO,IAAT,gBAAsBK,IADd,uBACvBpC,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/MovieDetailsPage/MovieDetailsPage.module.css?9108","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/api-movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetailsPage_button__mSHH6\",\"title\":\"MovieDetailsPage_title__63V3V\",\"link\":\"MovieDetailsPage_link__rhdjc\",\"active\":\"MovieDetailsPage_active__52Wu-\",\"notFound\":\"MovieDetailsPage_notFound__bS-BD\",\"movieDetalis\":\"MovieDetailsPage_movieDetalis__QesEx\"};","import styles from './MovieDetailsPage.module.css';\nimport Loader from 'components/Loader/Loader';\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { fetchMovieDetails, IMAGE_URL } from 'services/api-movies';\nimport { BiCaretLeftCircle } from 'react-icons/bi';\nimport { IconContext } from 'react-icons';\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const from = location.state?.from || 'movies';\n\n  useEffect(() => {\n    const getDetailsMovie = async () => {\n      setLoading(true);\n      try {\n        const data = await fetchMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(error.massage);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getDetailsMovie();\n  }, [movieId]);\n\n  const onGoBack = () => {\n    navigate(from);\n  };\n\n  return (\n    <>\n      {error && <p>Something goes wrong</p>}\n      {loading && <Loader />}\n      {!movie ? (\n        <div className={styles.notFound}>This movie is not found</div>\n      ) : (\n        <>\n          <button className={styles.button} type=\"button\" onClick={onGoBack}>\n            <IconContext.Provider\n              value={{\n                color: 'white',\n                size: 22,\n                className: 'global-class-name',\n              }}\n            >\n              <div>\n                <BiCaretLeftCircle />\n              </div>\n            </IconContext.Provider>\n            <span>Go back</span>\n          </button>\n          <div className={styles.movieDetalis}>\n            <div className={styles.movieImg}>\n              <img\n                src={\n                  movie.poster_path\n                    ? IMAGE_URL + movie.poster_path\n                    : `https://bitsofco.de/content/images/2018/12/broken-1.png`\n                }\n                alt={movie.original_title}\n                widht=\"300px\"\n               \n              />\n            </div>\n\n            <div>\n              <h2 className={styles.title}>{movie.title}</h2>\n              <p>User Score: {`${movie.vote_average * 10}`}%</p>\n              <h3>Overview</h3>\n              <p>{`${movie.overview}`}</p>\n              <h3>Genres</h3>\n              <p>{`${movie.genres.map(genre => genre.name).join(' / ')}`}</p>\n            </div>\n          </div>\n        </>\n      )}\n\n      \n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '3bfeb78ba6df5af22a5c39d335985fa7',\n    language: 'en-US',\n  },\n});\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      page: 1,\n      include_adult: false,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const { data } = await instance.get(`movie/${id}`);\n  return data;\n};\n"],"names":["useState","movie","setMovie","movieId","useParams","loading","setLoading","error","setError","location","useLocation","navigate","useNavigate","from","state","useEffect","getDetailsMovie","fetchMovieDetails","data","massage","Loader","className","styles","type","onClick","value","color","size","src","poster_path","IMAGE_URL","alt","original_title","widht","title","vote_average","overview","genres","map","genre","name","join","instance","axios","baseURL","params","api_key","language","fetchTrendingMovies","get","searchMovies","query","page","include_adult","id"],"sourceRoot":""}