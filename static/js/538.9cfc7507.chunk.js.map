{"version":3,"file":"static/js/538.9cfc7507.chunk.js","mappings":"oKA8BA,IA3ByB,SAAC,GAAa,IAAZA,EAAW,EAAXA,OACjBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,wBACKF,GAAUA,EAAOG,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAN,OAGlB,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAACC,KAAMP,GAAzC,SACKI,KAFAD,EAHS,KAYjC,C,qIClBD,EAA4B,6BAA5B,EAAsE,8BAAtE,EAAyH,sCAAzH,EAA2L,6CAA3L,EAA4P,qC,SCiD5P,EA5CiB,SAAC,GAAgB,IAAfK,EAAc,EAAdA,SACf,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAmBJ,OACI,gBAAKC,UAAWC,EAAhB,UACA,kBAAMD,UAAWC,EAAjB,uBAfuB,SAAAC,GACnBA,EAAMC,iBAONP,EAASE,GACTC,EAAU,GACX,GAML,kBACCK,SArBsB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBN,EAAUM,EAAOC,OACjBC,QAAQC,IAAIV,EACb,EAmBJE,UAAWC,EACXQ,KAAK,SACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZP,MAAOR,KAER,mBAAQY,KAAK,SAASV,UAAWC,EAAjC,UACQ,iBAAMD,UAAWC,EAAjB,0BAKT,E,SCND,EAjCmB,WACjB,OAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAe2B,EAAf,KACA,GAA0BjB,EAAAA,EAAAA,UAAS,MAAnC,eAAOkB,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,UAqBrC,OAdAC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAa,CACf,IAAMG,EAAW,mCAAG,gHAEQC,EAAAA,EAAAA,GAAaJ,GAFrB,gBAETK,EAFS,EAETA,QACPX,EAAUW,GAHM,gDAKdT,EAAS,KAAMU,SALD,yDAAH,qDAQjBH,GACD,CACF,GAAE,CAACH,IACNb,QAAQC,IAAIrB,IAER,6BACE,SAAC,EAAD,CAAWS,SArBc,SAAA+B,GAC3BR,EAAgB,CAAES,MAAOD,GAC1B,IAoBIxC,IAAU,SAAC0C,EAAA,EAAD,CAAkB1C,OAAQA,IACpC4B,IAAS,kDAGf,C,4GCrCKe,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EAAmB,mCAAG,sGACVN,EAAST,IAAI,uBADH,uBACzBgB,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAKnBb,EAAY,mCAAG,WAAM1B,GAAN,yFACHgC,EAAST,IAAI,eAAgB,CAClDY,OAAQ,CACNK,KAAM,EACNC,eAAe,EACfX,MAAO9B,KALe,uBAClBuC,EADkB,EAClBA,KADkB,kBAQnBA,GARmB,2CAAH,qD","sources":["components/MoviesEditorList/MoviesEditorList.jsx","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.jsx","services/api-movies.js"],"sourcesContent":["import {Link, useLocation} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nconst MoviesEditorList = ({movies}) =>{\n    const location = useLocation();\n    return (\n        <ul>\n            {movies && movies.map(({id, title}) => \n            \n            (\n                <li key={id}>\n                    <Link to={`/movies/${id}`} state={{from: location}}>\n                        {title}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    );\n\n}\n\nMoviesEditorList.propTypes = {\n    movies: PropTypes.arrayOf (\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n        })\n    )\n}\n\nexport default MoviesEditorList;","// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Searchbar_searchbar__0FWoU\",\"searchForm\":\"Searchbar_searchForm__Bt5yh\",\"SearchForm__button\":\"Searchbar_SearchForm__button__AL7uQ\",\"SearchForm__button__label\":\"Searchbar_SearchForm__button__label__ATtVM\",\"SearchForm__input\":\"Searchbar_SearchForm__input__zcAHX\",\"SearchForm-input\":\"Searchbar_SearchForm-input__LYSn6\"};","import styles from './Searchbar.module.css'\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\n\nconst Searchbar =({onSubmit}) => {\n    const [search, setSearch] = useState('');\n\n    const handleChange = ({ target }) => {\n        setSearch(target.value);\n        console.log(search)\n      };\n      const handleSubmit = event => {\n        event.preventDefault();\n   \n        // if (search.trim() === '') {\n        //   toast.error('Enter your search query');\n        //   return;\n        // }\n    \n        onSubmit(search);\n        setSearch('');\n      };\n\n\nreturn (\n    <div className={styles.searchbar}>\n    <form className={styles.searchForm}> onSubmit={handleSubmit}\n  <input\n   onChange={handleChange}\n   className={styles.SearchForm__input}\n   name=\"search\"\n   type=\"text\"\n   autoComplete=\"off\"\n   autoFocus\n   placeholder=\"Search movie\"\n   value={search}\n  ></input>\n  <button type=\"submit\" className={styles.SearchForm__button}>\n          <span className={styles.SearchForm__button__label}>Search</span>\n        </button>\n    </form>\n    </div>\n)\n}\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\nexport default Searchbar;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'services/api-movies';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MoviesEditorList from 'components/MoviesEditorList/MoviesEditorList';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchMovie = searchParams.get('search');\n\n  const searchMoviesBySearch = newSearch => {\n    setSearchParams({ query: newSearch });\n  };\n\n\n  useEffect(() => {\n    if (searchMovie) {\n      const fetchMovies = async () => {\n        try {\n          const {results} = await searchMovies(searchMovie);\n          setMovies(results);\n        } catch (error) {\n            setError(error.message);\n        }\n      };\n      fetchMovies();\n    }\n  }, [searchMovie]);\nconsole.log(movies)\n  return (\n    <main>\n      <Searchbar onSubmit={searchMoviesBySearch} />\n      {movies && <MoviesEditorList movies={movies} />}\n      {error && <p>Something goes wrong</p>}\n    </main>\n  );\n};\nexport default MoviesPage;\n","import axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '3bfeb78ba6df5af22a5c39d335985fa7',\n    language: 'en-US',\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const searchMovies = async search => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      page: 1,\n      include_adult: false,\n      query: search,\n    },\n  });\n  return data;\n};\n"],"names":["movies","location","useLocation","map","id","title","to","state","from","onSubmit","useState","search","setSearch","className","styles","event","preventDefault","onChange","target","value","console","log","name","type","autoComplete","autoFocus","placeholder","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","searchMovie","get","useEffect","fetchMovies","searchMovies","results","message","newSearch","query","MoviesEditorList","instance","axios","baseURL","params","api_key","language","fetchTrendingMovies","data","page","include_adult"],"sourceRoot":""}